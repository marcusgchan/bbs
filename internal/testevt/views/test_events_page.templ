package testevt

import (
	"github.com/marcusgchan/bbs/internal/sview"
	"fmt"
)

type TestEvtProps struct {
	ID             string
	Environment    string
	Difficulty     string
	MainPlayerName string
	StartedAt      string
	HasEnded       bool
}

templ TestEvtPage(props []TestEvtProps, nextPage int) {
	@sview.Base() {
		@TestEvtContent(props, nextPage)
	}
}

templ TestEvtContent(props []TestEvtProps, nextPage int) {
	<h1 class="text-xl">Test Events</h1>
	<table class="w-full">
		<thead>
			<th class="p-2 min-w-24 text-start">ID</th>
			<th class="p-2 min-w-24 text-start">Environment</th>
			<th class="p-2 min-w-24 text-start">Dificulty</th>
			<th class="p-2 min-w-24 text-start">MainPlayer</th>
			<th class="p-2 min-w-24 text-start">Started At</th>
		</thead>
		<tbody>
			@TestEvtRows(props, nextPage)
		</tbody>
	</table>
}

templ TestEvtRows(props []TestEvtProps, nextPage int) {
	for i, prop := range props {
		<tr
			class="cursor-pointer hover:bg-gray-100"
			if prop.HasEnded {
				hx-get={ string(templ.URL(fmt.Sprintf("/test-events/%s", prop.ID))) }
				hx-swap="innerHTML"
				hx-target="main"
			}
		>
			<td
				class="p-2"
				if i == len(props) - 1 {
					hx-get={ string(templ.URL(fmt.Sprintf("/test-events?infinite=true&page=%d", nextPage))) }
					hx-swap="afterend"
					hx-trigger="revealed"
					hx-target="closest tr"
				}
			>{ prop.ID }</td>
			<td class="p-2">{ prop.Environment }</td>
			<td class="p-2">{ prop.Difficulty }</td>
			<td class="p-2">{ prop.MainPlayerName }</td>
			<td class="p-2">{ prop.StartedAt }</td>
			if prop.HasEnded {
				<td>Finished</td>
			} else {
				<td>Ongoing</td>
			}
		</tr>
	}
}
